{"version":3,"sources":["components/Form/useForm.js","components/Form/validateForm.js","components/Form/CustomForm.js","App.js","serviceWorker.js","index.js"],"names":["useForm","callback","validate","useState","name","age","email","song","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","e","target","value","files","handleSubmit","preventDefault","forEach","key","size","toUpperCase","hasTwoWords","split","firstNameLength","lastNameLength","test","CustomForm","songName","setSongName","console","log","Container","className","Row","Col","md","Form","noValidate","onSubmit","Group","controlId","Control","type","placeholder","aria-describedby","required","onChange","File","id","label","custom","accept","audioTrack","audioTrackName","reader","FileReader","readAsDataURL","onload","result","handleSongUploadPlaceholder","Button","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.21408367.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (callback, validate) => {\r\n    const [values, setValues] = useState({ name: \"\", age: \"\", email: \"\", song: {} });\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        if (e.target.files && e.target.files[0]) {\r\n            setValues({\r\n                ...values,\r\n                [name]: e.target.files[0]\r\n            });\r\n        }\r\n        else\r\n            setValues({\r\n                ...values,\r\n                [name]: value\r\n            });\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setErrors(validate(values));\r\n        setIsSubmitting(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && isSubmitting) {\r\n            callback();\r\n        }\r\n    }, [errors,callback,isSubmitting]);\r\n\r\n    return {\r\n        handleChange,\r\n        handleSubmit,\r\n        values,\r\n        errors\r\n    };\r\n};\r\n\r\nexport default useForm;","export default function validate(values) {\r\n    let errors = {};\r\n    Object.keys(values).forEach(key => {\r\n        if (key === 'song' && !values.song.size)\r\n            errors[key] = `${key.toUpperCase()} is required`;\r\n        else if (key !== 'song' && (!values[key].length > 0))\r\n            errors[key] = `${key.toUpperCase()} is required`;\r\n    });\r\n\r\n\r\n    // name validation\r\n    if (values.name) {\r\n        let name = values.name;\r\n        let hasTwoWords = (name.split(' ').length === 2);\r\n        let firstNameLength = name.split(' ')[0].length;\r\n        let lastNameLength = hasTwoWords ? name.split(' ')[1].length : 0;\r\n        let isFullNameValid = hasTwoWords && (firstNameLength > 1) && (lastNameLength > 1);\r\n        if (!isFullNameValid)\r\n            errors.name = 'NAME should consists of first name & last name.';\r\n    }\r\n\r\n    // age validation\r\n    if (values.age) {\r\n        let age = values.age;\r\n        if ((age < 18) || (age > 120))\r\n            errors.age = 'AGE should be above 18 and below 120.';\r\n    }\r\n\r\n\r\n    // email validation\r\n    if (values.email && !/\\S+@\\S+\\.\\S+/.test(values.email))\r\n        errors.email = \"Email address is invalid\";\r\n\r\n    // song validation\r\n    if (values.song.size) {\r\n        let size = values.song.size / (1024 * 1024);\r\n        let sizeLimit = 3;\r\n        if (size > sizeLimit)\r\n            errors.song = \"Song size should be below 10 MB\";\r\n    }\r\n\r\n    return errors;\r\n}","import React, { useState } from 'react'\r\nimport { Form, Col, Row, Button, Container } from 'react-bootstrap'\r\nimport useForm from \"./useForm\";\r\nimport validate from \"./validateForm\";\r\nimport './CustomForm.css'\r\n\r\n\r\nfunction CustomForm() {\r\n    const [songName, setSongName] = useState(\"Choose a song\");\r\n    const { handleChange, handleSubmit, values, errors } = useForm(\r\n        submit,\r\n        validate\r\n    );\r\n\r\n    function submit() {\r\n        console.log(\"Submitted Succesfully\");\r\n    }\r\n\r\n    const handleSongUploadPlaceholder = (e) => {\r\n        let audioTrack = e.target.files[0];\r\n        if (!audioTrack)\r\n            return\r\n\r\n        let audioTrackName = audioTrack.name;\r\n        setSongName(audioTrackName);\r\n\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(audioTrack);\r\n        reader.onload = () => {\r\n            console.log(reader.result);\r\n        };\r\n\r\n    }\r\n\r\n    const handleFileUpload = (e) => {\r\n        handleSongUploadPlaceholder(e);\r\n        handleChange(e);\r\n    }\r\n\r\n    return (\r\n        <Container className='d-flex align-items-center'>\r\n            <Row className='sa m-auto'>\r\n                <Col className='left-child' md={6}>\r\n                    <div className='companyMotto'>\r\n                        <div className='companyMascot mb-2'></div>\r\n                        <div className='welcome text-center '>Welcome To</div>\r\n                        <div className='companyName h5 text-center '>SongDew</div>\r\n                    </div>\r\n                </Col>\r\n\r\n                <Col md={6} className=\"p-4 right-child\">\r\n                    <div className='cassette mb-3'></div>\r\n                    <Form noValidate onSubmit={handleSubmit}>\r\n\r\n                        <Form.Group controlId=\"nameID\">\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                aria-describedby=\"inputGroupPrepend\"\r\n                                required\r\n                                value={values.name}\r\n                                onChange={handleChange}\r\n                                name=\"name\"\r\n                                className={errors.name && \"inputError\"} />\r\n                            {errors.name && <p className=\"error\">{errors.name}</p>}\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"ageID\">\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                placeholder=\"Age\"\r\n                                aria-describedby=\"inputGroupPrepend\"\r\n                                required\r\n                                value={values.age}\r\n                                onChange={handleChange}\r\n                                name=\"age\"\r\n                                className={errors.age && \"inputError\"}\r\n                            />\r\n                            {errors.age && <p className=\"error\">{errors.age}</p>}\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"emailID\">\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                aria-describedby=\"inputGroupPrepend\"\r\n                                required\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                name=\"email\"\r\n                                className={errors.email && \"inputError\"}\r\n                            />\r\n                            {errors.email && <p className=\"error\">{errors.email}</p>}\r\n\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.File\r\n                            id=\"songFileID\"\r\n                            label={songName}\r\n                            custom\r\n                            accept=\".mp3,.flac,.wav\"\r\n                            required\r\n                            name=\"song\"\r\n                            onChange={handleFileUpload}\r\n                            className={errors.song && \"inputError\"}\r\n                        />\r\n                        {errors.song && <p className=\"error\">{errors.song}</p>}\r\n\r\n\r\n                        <div className='d-flex justify-content-end mt-3'>\r\n                            <Button type=\"submit\" className='py-1'>Join Us</Button>\r\n                        </div>\r\n\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CustomForm","import React from 'react';\nimport CustomForm from './components/Form/CustomForm'\n\nfunction App() {\n  return (\n    <CustomForm/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}